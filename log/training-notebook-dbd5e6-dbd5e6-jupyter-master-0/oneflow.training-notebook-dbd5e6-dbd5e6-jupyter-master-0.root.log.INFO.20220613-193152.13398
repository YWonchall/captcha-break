Log file created at: 2022/06/13 19:31:52
Running on machine: training-notebook-dbd5e6-dbd5e6-jupyter-master-0
Running duration (h:mm:ss): 0:00:00
Log line format: [IWEF]yyyymmdd hh:mm:ss.uuuuuu threadid file:line] msg
I20220613 19:31:52.352952 13398 env_global_objects_scope.cpp:159] Using rpc backend: local
I20220613 19:31:52.421540 13398 epoll_comm_network.cpp:63] CommNet:Epoll listening on 0.0.0.0:37965
F20220613 19:44:11.061210 14342 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
F20220613 19:44:11.804311 14341 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
F20220613 19:44:12.515292 14340 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
F20220613 19:44:12.603083 14339 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
F20220613 19:44:12.616267 14338 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
F20220613 19:44:12.707440 14336 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
F20220613 19:44:12.797577 14337 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
F20220613 19:44:13.688120 14335 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
F20220613 20:30:38.896651 16818 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
F20220613 20:30:39.102041 16817 cuda_util.cpp:135] Check failed: !pthread_fork::IsForkedSubProcess() Cannot re-initialize CUDA in forked subprocess. To use CUDA with multiprocessing, you must add 'multiprocessing.set_start_method("spawn")' in '__main__' if you are using Python's multiprocessing
